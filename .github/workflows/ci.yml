name: CI

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: 0 0 * * 0
  repository_dispatch:
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY || 'ghcr.io' }}
  DOCKER_TARGET_PLATFORM: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x

jobs:
  base:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: ${{ secrets.DOCKER_NAMESPACE || github.actor }}/base
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo "docker_platform=${DOCKER_TARGET_PLATFORM}" >> $GITHUB_OUTPUT
          echo "docker_image=${DOCKER_REGISTRY}/${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME || github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD || github.token }}

      - name: Actually Build base Image
        if: success()
        run: |
          ref_name=$(echo ${{ github.ref }} | sed -E 's:^refs/[^/]+/::')
          tag=action-${{ steps.prepare.outputs.version }}
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            if [ "${ref_name}" = "main" ]; then
              tag=latest
            elif [ "${ref_name}" != "" ]; then
              tag=${ref_name}
            fi
          fi
          docker buildx build \
            --platform ${{ steps.prepare.outputs.docker_platform }} \
            --tag ${{ steps.prepare.outputs.docker_image }}:${tag} \
            --file base/Dockerfile \
            --push \
            base

  lv1:
    name: ${{ matrix.image }}
    runs-on: ubuntu-latest
    needs: base
    strategy:
      fail-fast: false
      matrix:
        image:
          - build
          - code
          - bridge
    env:
      DOCKER_IMAGE: ${{ secrets.DOCKER_NAMESPACE || github.actor }}/${{ matrix.image }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo "docker_platform=${DOCKER_TARGET_PLATFORM}" >> $GITHUB_OUTPUT
          echo "docker_image=${DOCKER_REGISTRY}/${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME || github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD || github.token }}

      - name: Actually Build ${{ matrix.image }} Image
        if: success()
        run: |
          ref_name=$(echo ${{ github.ref }} | sed -E 's:^refs/[^/]+/::')
          tag=action-${{ steps.prepare.outputs.version }}
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            if [ "${ref_name}" = "main" ]; then
              tag=latest
            elif [ "${ref_name}" != "" ]; then
              tag=${ref_name}
            fi
          fi
          docker buildx build \
            --build-arg NAMESPACE=${{ secrets.DOCKER_NAMESPACE || github.actor }} \
            --build-arg TAG=${tag} \
            --platform ${{ steps.prepare.outputs.docker_platform }} \
            --tag ${{ steps.prepare.outputs.docker_image }}:${tag} \
            --file ${{ matrix.image }}/Dockerfile \
            --push \
            ${{ matrix.image }}

  lv2:
    name: ${{ matrix.image }}
    runs-on: ubuntu-latest
    needs: lv1
    strategy:
      fail-fast: false
      matrix:
        image:
          - dev
    env:
      DOCKER_IMAGE: ${{ secrets.DOCKER_NAMESPACE || github.actor }}/${{ matrix.image }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo "docker_platform=${DOCKER_TARGET_PLATFORM}" >> $GITHUB_OUTPUT
          echo "docker_image=${DOCKER_REGISTRY}/${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME || github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD || github.token }}

      - name: Actually Build ${{ matrix.image }} Image
        if: success()
        run: |
          ref_name=$(echo ${{ github.ref }} | sed -E 's:^refs/[^/]+/::')
          tag=action-${{ steps.prepare.outputs.version }}
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            if [ "${ref_name}" = "main" ]; then
              tag=latest
            elif [ "${ref_name}" != "" ]; then
              tag=${ref_name}
            fi
          fi
          docker buildx build \
            --build-arg NAMESPACE=${{ secrets.DOCKER_NAMESPACE || github.actor }} \
            --build-arg TAG=${tag} \
            --platform ${{ steps.prepare.outputs.docker_platform }} \
            --tag ${{ steps.prepare.outputs.docker_image }}:${tag} \
            --file ${{ matrix.image }}/Dockerfile \
            --push \
            ${{ matrix.image }}
